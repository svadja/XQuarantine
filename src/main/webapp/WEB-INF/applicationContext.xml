<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/mvc 
          http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
          http://www.springframework.org/schema/jdbc 
          http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
          http://www.springframework.org/schema/task
 	  http://www.springframework.org/schema/task/spring-task-3.2.xsd
 	  http://www.springframework.org/schema/context
 	  http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->
    <context:property-placeholder location="/WEB-INF/properties/main.properties" ignore-unresolvable="true" />
    

    <!-- Enable @Controller annotation support -->
    <mvc:annotation-driven />
    <mvc:resources mapping="/resources/**" location="/resources/" />
    
    <!-- Scan classpath for annotations (eg: @Service, @Repository etc) -->
    <context:component-scan base-package="com.sasav.xquarantine" />

    <!-- Database -->
    <!--
    <jdbc:embedded-database id="dataSource" type="HSQL"/>
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:sql/users.sql"/>
    </jdbc:initialize-database>
    -->
    
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    <bean id="sessionFactory" 
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="/WEB-INF/properties/hibernate.cfg.xml" />
        <property name="packagesToScan" value="com.sasav.xquarantine.domain" />
    </bean>

    <bean id="daoI" class="com.sasav.xquarantine.dao.DaoImpl" />

    <!-- Shedule -->
    
    <bean id="runScheduler" class="com.sasav.xquarantine.service.ScheduledTask" />
    
    <task:scheduled-tasks>
        <task:scheduled ref="runScheduler" method="updateMailList" cron="${sheduler.loadUpdate}" />
        <task:scheduled ref="runScheduler" method="deleteOldMLItems" cron="${sheduler.deleteOld}" />
    </task:scheduled-tasks>
    
    
    
    
    <!-- Mail -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}"/>
        <property name="port" value="${mail.port}"/>
        <property name="username" value="${mail.username}"/>
        <property name="password" value="${mail.password}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">${mail.isauth}</prop>
                <prop key="mail.smtp.starttls.enable">${mail.istls}</prop>
                <prop key="mail.debug">${mail.isdebug}</prop>
            </props>    
        </property>    
    </bean>
    
    <!-- BEANS -->
    <bean id="ml" class="com.sasav.xquarantine.service.MailListImpl"/>
    
    <bean id="storeDate" class="com.sasav.xquarantine.domain.StoreDate">
        <constructor-arg ref="ml"/>
    </bean>
    
    <bean id="securityImpl" class="com.sasav.xquarantine.service.SecurityImpl"/>

    <bean id="accessResendUser" class="com.sasav.xquarantine.domain.AccessByStatus">
        <constructor-arg value="${maillist.accessUserResend}"/>
    </bean>

    
    
    
</beans>
